{
  "hash": "fe804ad32eb4c8cff9ac547beecb3944",
  "result": {
    "markdown": "# The Normla Distribution\n\n## Measuring Fuses for Dastardly Deeds\n\nSetting up fuses and measuring how long it takes them to burn through to make sure one has 18 seconds to get away. The times recorded (in seconds) for each fuse to burn through are: 19, 22, 20, 19, 23.\n\n> Calculating the mean gives us μ = 20.6, and calculating the standard deviation gives us σ = 1.62.\n\nKeep in mind that R computes the standard deviation dividing by $n - 1$ instead of just $n$ as in the book. so we have to use again our own function as developed in @lst-compute-sd.\n\n\n::: {.cell}\n\n```{.r .cell-code #lst-comp-mean lst-cap=\"Compute mean\"}\n(mu <- mean(c(19, 22, 20, 19, 23)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 20.6\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code #lst-comp-sigma-with-r-function lst-cap=\"Compute standard deviation with base R function\"}\n(sigma1 <- sd(c(19, 22, 20, 19, 23)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 1.81659\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code #lst-comp-sigma-with-own-function lst-cap=\"Compute standard deviation with own function\"}\nsd_fun <- function(x) {\n  sqrt(sum((x - mean(x))^2) * 1 / length(x))\n}\n\n(sigma2 <- sd_fun(c(19, 22, 20, 19, 23)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] 1.624808\n```\n\n\n:::\n:::\n\n\n## The Normal Distribution\n\n> The normal distribution is a continuous probability distribution (like the beta distribution in @sec-beta-distribution) that best describes the strength of possible beliefs in the value of an uncertain measurement, given a known mean and standard deviation. (104)\n\n![A normal distribution with μ = 0 and σ = 1](img/12fig03.jpg){#fig-12-03\nfig-alt=\"A normal distribution with mu = 0 and sigma = 1\"\nfig-align=\"center\" width=\"70%\"}\n\n::: {layout-ncol=2}\n![A normal distribution with μ = 0 and σ = 0.5](img/12fig04.jpg){#fig-12-04\nfig-alt=\"A normal distribution with mu = 0 and sigma = 0.5\"}\n\n![A normal distribution with μ = 0 and σ = 2](img/12fig05.jpg){#fig-12-05\nfig-alt=\"A normal distribution with mu = 0 and sigma = 2\" width=\"70%\"}\n:::\n\n## Solving the Fuse Problem\n\n![A normal distribution with μ = 20.6 and σ = 1.62](img/12fig06.jpg){#fig-12-06\nfig-alt=\"A normal distribution with mu = 20.6 and sigma = 1.62\" width=\"70%\"}\n\nWhat is the probability, given the data observed, that the fuse will run for 18 seconds or less? \n\n![The area under the curve that we’re interested in](img/12fig07.jpg){#fig-12-07\nfig-alt=\"A normal distribution with mu = 20.6 and sigma = 1.62\" width=\"70%\"}\n\nThe area of the shaded region represents the probability of the fuse lasting 18 seconds or less given the observations. Notice that even though none of the observed values was less than 18, because of the spread of the observations, the normal distribution in @fig-12-06 shows that a value of 18 or less is still possible. \n\nBy integrating over all values less than 18, we can calculate the probability that the fuse will not last as long as our villain needs it to.\n\n> We can see that the line in the PDF is nearly flat at 10, meaning there is virtually no probability in this region, so we can just integrate from 10 to 18. We could also choose a lower value, like 0, but because there’s effectively no probability in this region, it won’t change our result in any meaningful way.\n\nI am using 0, because this value is more intuitive for me.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nintegrate(function(x)\n    dnorm(x, mean = 20.6, sd = 1.62), 0, 18)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> 0.05425369 with absolute error < 3.5e-05\n```\n\n\n:::\n:::\n\nThe same result but a smaller error in my version: < 3e-11 vs. < 3.5e-05\n\n> Rounding the value, we can see that `P(fuse time < 18) = 0.05`, telling us there is a 5 percent chance that the fuse will last 18 seconds or less.\n\n## Some Tricks and Intuitions\n\n> For *any* normal distribution with a known mean and standard deviation, you can estimate the area under the curve around `μ` in terms of `σ`.\n\n**Distance from the mean**\n\n- `1σ`: 68%\n- `2σ`: 95%\n- `3σ`: 99,7%\n\n![Sixty-eight percent of the probability density (area under the curve) lies between one standard deviation of the mean in either direction.](img/12fig08.jpg){#fig-12-08\nfig-alt=\"Sixty-eight percent of the probability density (area under the curve) lies between one standard deviation of the mean in either direction.\" width=\"70%\"}\n\n> This little trick is very useful for quickly assessing the likelihood of a value given even a small sample. … Even when we *do* want to use R to integrate, this trick can be useful for determining a minimum or maximum value to integrate from or to. \n\n## \"N Sigma\" Events\n\n> “the fall of the stock price was an eight-sigma event.” What this expression means is that the observed data is eight standard deviations from the mean. We saw the progression of one, two, and three standard deviations from the mean, which were values at 68, 95, and 99.7 percent, respectively. You can easily intuit from this that an eight-sigma event must be extremely unlikely. \n\n::: {.callout-warning}\nIf you ever see data that is 5 or more standard deviation away from the mean: Check you distribution because it could be a that your data didn't come from a normal distribution.\n:::\n\n## The Beta Distribution and the Normal Distribution\n\n> You may remember from @sec-beta-distribution that the beta distribution allows us to estimate the true probability given that we have observed `α` desired outcomes and `β` undesired outcomes, where the total number of outcomes is `α + β`. Based on that, you might take some issue with the notion that the normal distribution is truly the best method to model parameter estimation given that we know only the mean and standard deviation of any given data set. After all, we could describe a situation where `α = 3` and `β = 4` by simply observing three values of `1` and four values of `0`. This would give us `μ = 0.43` and `σ = 0.53`. We can then compare the beta distribution with `α = 3` and `β = 4` to a normal distribution with `μ = 0.43` and `σ = 0.53`, as shown in @fig-12-09.\n\n![Comparing the beta distribution to the normal distribution](img/12fig09.jpg){#fig-12-09\nfig-alt=\"The beta distribution is flatter than the normal distribution but extends his tails to both sides wider\" width=\"70%\"}\n\n> It’s clear that these distributions are quite different. We can see that for both distributions the center of mass appears in roughly the same place, but the bounds for the normal distribution extend way beyond the limits of our graph. This demonstrates a key point:\n\n::: {.callout-important}\n##### Beta or Normal Distribution?\n\nOnly when you know nothing about the data other than its mean and variance is it safe to assume a normal distribution.  The following differences could help for a decision:\n\n- **Beta distribution**: The value we’re looking for must lie in the range 0 to 1. \n- **Normal distribution** is defined from –∞ to ∞, which often includes values that cannot possibly exist.\n:::\n\n\n\n\n## Experiments\n\n### Replicate Figure 12-3, 12-4 and 12-5\n\n#### Figure 12-3 (Book, p.105)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code #lst-fig-norm-dist lst-cap=\"Replicate Figure 12-3: Normal distribution with μ of 0 and σ of 1\"}\nggplot2::ggplot(data.frame(x = c(-5, 5)), \n                ggplot2::aes(x = x)) +\n    ggplot2::stat_function(fun = dnorm) +\n    ggplot2::theme_bw() +\n    ggplot2::labs(\n        title = \"Normal distribution with a mean of 0 and a standard deviation of 1\",\n        x = \"Value\",\n        y = \"Density\"\n    )\n```\n\n::: {.cell-output-display}\n![Normal distribution with μ of 0 and σ of 1](12-normal-distribution_files/figure-html/fig-norm-dist-1.png){#fig-norm-dist fig-align='center' width=70%}\n:::\n:::\n\n### Replicate Figure 12-4 and 12-5 (Book, p.106f.)\n\n\n::: {.cell}\n\n```{.r .cell-code #lst-fig-norm-dist1 lst-cap=\"Replicate Figure 12-4: Normal distribution with μ of 0 and σ of 0.5\"}\np1 <- \n    ggplot2::ggplot(data.frame(x = c(-5, 5)), \n                    ggplot2::aes(x = x)) +\n        ggplot2::stat_function(fun = function(x) dnorm(x, 0, 0.5)) +\n        ggplot2::theme_bw() +\n        ggplot2::labs(\n            x = \"Value\",\n            y = \"Density\"\n        )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code #lst-fig-norm-dist2 lst-cap=\"Replicate Figure 12-5: Normal distribution with μ of 0 and σ of 1\"}\np2 <- \n    ggplot2::ggplot(data.frame(x = c(-5, 5)), \n                    ggplot2::aes(x = x)) +\n        ggplot2::stat_function(fun = function(x) dnorm(x, 0, 2)) +\n        ggplot2::theme_bw() +\n        ggplot2::labs(\n            x = \"Value\",\n            y = \"Density\"\n        )\n```\n:::\n\n\n\nI am trying different approaches to display the two graphs side by side.\n\nThe first one uses the package {**patchwork**}.\n\n\n::: {.cell}\n\n```{.r .cell-code #lst-fig-norm-dist-3 lst-cap=\"Display Figure 12-4 and 12-5\"}\nlibrary(patchwork)\np1 + p2\n```\n\n::: {.cell-output-display}\n![Normal Distributions with µ of 0; σ of 0.5 (left) and σ of 2 (right)](12-normal-distribution_files/figure-html/fig-norm-dist-3-1.png){#fig-norm-dist-3 width=8in height=4in}\n:::\n:::\n\n\n\nThe second approach uses the Quarto [figure panels](https://quarto.org/docs/authoring/figures.html) with `{layout-ncol=2}`\n\n::: {layout-ncol=2}\n\n::: {.cell}\n\n```{.r .cell-code}\np1\n```\n\n::: {.cell-output-display}\n![Normal Distribution μ = 0, σ = 0.5](12-normal-distribution_files/figure-html/fig-norm-p1-1.png){#fig-norm-p1 width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np2\n```\n\n::: {.cell-output-display}\n![Normal Distribution:μ = 0, σ = 2](12-normal-distribution_files/figure-html/fig-norm-p2-1.png){#fig-norm-p2 width=672}\n:::\n:::\n\n\n:::\n",
    "supporting": [
      "12-normal-distribution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}